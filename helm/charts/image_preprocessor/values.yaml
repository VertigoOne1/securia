# Default values for preproc.
# This is a YAML-formatted file.
# Declare variables to be passed into the templates.

replicaCount: 1

image:
  registry: "10.0.0.59:5000"
  path: "/securia"
  name: "image-preprocessor"
  tag: ":latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

postfix: "preproc"

app:
  general:
    app_name: image-preprocessor
    app_debug_level: INFO

appConfig:
  general:
    app_name: image_preprocessor
    default_debug_level: DEBUG
  preprocessor:
    enabled: True
    write_local_file: True
    temp_output_folder: /tmp/kafka
    time_format: "%Y%m%d_%H%M%S.%f%z"
    image_filename_prefix: "image_dict"
  storage:
    bucket_name: test
    endpoint_hostname: localhost
    port: 32650
    access_key: AKIAIOSFODNN7EXAMPLE
    secret_access_key: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
  kafka:
    broker_url: ["10.0.0.59:32394"]
    security_protocol: SASL_PLAINTEXT
    sasl_mechanism: SCRAM-SHA-512
    sasl_plain_username: admin
    sasl_plain_password: Xr4i0hhtlnxsPZ9aMfMgM7DhZraddu3K
    topic_prefix: collector.
    consumer_group: preprocessor
    auto_offset_reset: latest
    value_serialiser: lambda x:json.dumps(x).encode('utf-8')
  flask:
    default_port: 8088
    debug_level: INFO
    debug_enabled: False
  scheduler:
    enabled: True
  metrics:
    enabled: True
  logging:
    enable_file_log_handler: False
    enable_stdout_log_handler: True
    enable_kafka_log_handler: False

service:
  type: ClusterIP
  port: 8088
  name: preproc

serviceAccount:
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "preproc-sa"
  bindingPostfix: "-crb"

persistence:
  # -- use a PVC to persist data
  enabled: False
  # -- the desired access modes the volume should have.
  accessModes:
    - ReadWriteOnce
  # -- Annotations to be added to the PersistentVolumeClaim
  annotations: {}
  # -- provide an existing PersistentVolumeClaim
  existingClaim: ""
  # -- Name of the StorageClass required by the claim.
  storageClassName: "local-path"
  # -- represents the minimum and maximum resources the volume should have.
  resources:
    requests:
      storage: 16Gi

ingress:
  # -- Enable ingress record generation
  enabled: false
  # -- IngressClass that will be be used to implement the Ingress
  className: ""
  # -- Additional annotations for the Ingress resource
  annotations: {}
    # cert-manager.io/cluster-issuer: cluster-issuer-name
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- An array with hosts and paths
  # @default -- see [values.yaml](./values.yaml)
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  # -- An array with the tls configuration
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}
