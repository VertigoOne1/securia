name: Deploy Securia

on: workflow_dispatch
  # push:
  #   branches: [ "main" ]
  #   # paths-ignore:
  #   #   - 'docs/**'
  #   # paths:
  #   #   - '**.js'
  # pull_request:
  #   branches: [ "main" ]

jobs:

  deploy-securia:

    environment:
      name: dev

    runs-on: homelab

    steps:
    - uses: actions/checkout@v4
    # - name: Install kubectl
    #   uses: azure/setup-kubectl@v4
    # - name: Setup registry pull secret # NO LONGER NECESSARY
    #   run: |
    #     export $(grep -v '^#' src/.env | xargs -d '\n')
    #     export
    #     if ! kubectl -n ${SECURIA_NAMESPACE} get secret registrypullsecret &> /dev/null; then
    #       echo "Secret does not exist. Creating it..."
    #       kubectl -n ${SECURIA_NAMESPACE} create secret docker-registry registrypullsecret \
    #         --docker-username=${{ vars.REGISTRY_USER }} \
    #         --docker-password=${{ secrets.REGISTRY_SECRET }} \
    #         --docker-email="securia@marnus.com" \
    #         --docker-server=${REGISTRY_HOST}
    #       echo "Secret created successfully."
    #     else
    #       echo "Secret already exists. Skipping creation."
    #     fi
    - name: Setup AGE
      uses: alessiodionisi/setup-age-action@v1.3.0
    - name: Check AGE version
      run: age --version
    - name: Setup SOPS
      uses: nhedger/setup-sops@v2
    - name: Check SOPS version
      run: sops --version
    - name: Install Helm
      uses: azure/setup-helm@v4.2.0
    - name: populate dotenvs
      run: |
        sops -i -d --input-type dotenv --output-type dotenv src/.env.secrets
        export $(grep -v '^#' src/.env.secrets | xargs -d '\n')

        # echo "SOPS_AGE_KEY=${{ secrets.SOPS_AGE_KEY }}" >> $GITHUB_ENV

        while IFS='=' read -r key value; do
          if [[ ! $key =~ ^# && -n $key ]]; then
            echo "$key=$value" >> $GITHUB_ENV
            echo "Set $key"
          fi
        done < src/.env

        while IFS='=' read -r key value; do
          if [[ ! $key =~ ^# && -n $key ]]; then
            echo "$key=$value" >> $GITHUB_ENV
            echo "Set $key"
          fi
        done < src/.env.secrets

        # Test Credentials
        helm registry login -u ${REGISTRY_USERNAME} -p ${REGISTRY_PASSWORD} ${REGISTRY_HOST}
      env:
        SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
    - name: Set Chart version
      run: |
        # echo "CHART_VERSION=1.1.${{ github.run_number }}" >> $GITHUB_ENV
        echo "CHART_VERSION=1.1.0" >> $GITHUB_ENV
    - name: Deploy application
      uses: helmfile/helmfile-action@v1.9.1
      with:
        helmfile-args: apply
        helmfile-workdirectory: helm
        helm-plugins: >
          https://github.com/databus23/helm-diff,
          https://github.com/jkroepke/helm-secrets
        helmfile-auto-init: "true"
      env:
        CHART_VERSION: ${{ env.CHART_VERSION }}
        SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}